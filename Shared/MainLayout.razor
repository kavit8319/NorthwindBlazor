@inherits LayoutComponentBase
@using Syncfusion.Blazor.Navigations
@inject IJSRuntime JS
@inject IAuthenticationManager authentificated
@inject IStringLocalizer<MainLayoutRes> localize

<PageTitle>Northwind.Interface.Server</PageTitle>
<AuthorizeView>
    <NotAuthorized>
        <div class="main">
            <div class="top-row px-2" style="z-index: 1111; padding-top: 0px">
                <CultureSelector />
            </div>
            <div class="content px-4">
                <BaseComponent>
                    <ChildContent>
                        @Body
                    </ChildContent>
                </BaseComponent>
            </div>
        </div>
    </NotAuthorized>
    <Authorized>
        <SfSidebar ID="Sidebar" Type="SidebarType.Push" Width="300px" DockSize="65px" EnableDock="true" @ref="Sidebar" @bind-IsOpen="SidebarToggle">
            <div class="sidebar" style="position:fixed;z-index:1200">
                <div class="topnav navbar navbar-dark">
                    <button class="navbar-toggler" @onclick="ToggleNavMenu" />
                    <a class="navbar-brand" href=""><span class="displayText" style="margin-right:30px">@localize["RootPage"]</span></a>
                </div>
                <div @onmouseover="MouseIn" @onmouseout="MouseOut">
                    <NavMenu />
                </div>
            </div>
        </SfSidebar>
        <div class="main">

            <div class="top-row px-2" style="z-index: 1111; padding-top: 0px">
                <a href="/userInfo">@context.User.Identity.Name</a>
                <a href="/" @onclick=Logaut >@localize["logout"]</a>
                <div style="padding-left: 10px; width: 1px; height: 25px; color: #E4E4E4">|</div>
                <CultureSelector />
            </div>

            <div class="content px-4">
                <BaseComponent>
                    <ChildContent >
                        @Body
                    </ChildContent>
                </BaseComponent>
            </div>
        </div>
    </Authorized>
   
</AuthorizeView>
@code {
    SfSidebar Sidebar;
    public bool SidebarToggle = false;
    public bool SidebarToggleFixed = false;
    public void ToggleNavMenu()
    {
        SidebarToggle = !SidebarToggle;
        SidebarToggleFixed = !SidebarToggleFixed;
    }

    public void Logaut()
    {
        authentificated.Logout();
    }
    public async Task MouseIn(Microsoft.AspNetCore.Components.Web.MouseEventArgs args)
    {
        var isSidebar = await JS.InvokeAsync<bool>("isSidebar", args.ClientX, args.ClientY);
        if (!SidebarToggle && isSidebar)
        {
            SidebarToggle = true;
        }
    }
    public async Task MouseOut(Microsoft.AspNetCore.Components.Web.MouseEventArgs args)
    {
        var isSidebar = await JS.InvokeAsync<bool>("isSidebar", args.ClientX, args.ClientY);
        if (SidebarToggle && !isSidebar)
        {
            if (!SidebarToggleFixed)
            {
                SidebarToggle = false;
            }
        }
    }
}